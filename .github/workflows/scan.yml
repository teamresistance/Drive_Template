name: "Scan"

on:
  push:
    branches:
      - "main"
  pull_request:
  schedule:
    - cron: "0 1 * * 1"

permissions: {}

concurrency:
  group: ${{ github.ref }}-${{ github.workflow }}
  cancel-in-progress: true

env:
  JAVA_VERSION: 17

jobs:
  sonar-scan:
    name: Sonar scan
    runs-on: ubuntu-latest
    permissions:
      checks: write
      contents: read
      pull-requests: write
      security-events: write

    steps:
      - name: Check out repo
        uses: actions/checkout@v5
        with:
          fetch-depth: 0

      - name: Configure JDK
        uses: actions/setup-java@v5
        with:
          distribution: "temurin"
          java-version: ${{ env.JAVA_VERSION }}

      - name: Cache Sonar packages
        uses: actions/cache@v4
        with:
          path: ~/.sonar/cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar

      - name: Cache Gradle packages
        uses: actions/cache@v4
        with:
          path: ~/.gradle/caches
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle') }}
          restore-keys: ${{ runner.os }}-gradle

      - name: Build and analyze
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: ./gradlew build sonar --info

  codeql-scan:
    name: CodeQL scan
    runs-on: ubuntu-latest
    permissions:
      checks: write
      contents: read
      pull-requests: write
      security-events: write

    strategy:
      fail-fast: false
      matrix:
        language: ["java-kotlin"]

    steps:
      - name: Check out repo
        uses: actions/checkout@v5

      - name: Configure JDK
        uses: actions/setup-java@v5
        with:
          distribution: "temurin"
          java-version: ${{ env.JAVA_VERSION }}

      - name: Initialize
        uses: github/codeql-action/init@v3
        with:
          languages: ${{ matrix.language }}

      - name: Autobuild
        uses: github/codeql-action/autobuild@v3

      - name: Analyze
        uses: github/codeql-action/analyze@v3
